const { COLORS } = require('../core/colors');

const prompts = {
    input: {
        enterValue: (field) => `${COLORS.CYAN}üìù –í–≤–µ–¥–∏—Ç–µ ${field}: ${COLORS.RESET}`,
        enterPassword: () => `${COLORS.CYAN}üîí –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ${COLORS.RESET}`,
        confirmPassword: () => `${COLORS.CYAN}üîí –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ${COLORS.RESET}`,
        enterEmail: () => `${COLORS.CYAN}üìß –í–≤–µ–¥–∏—Ç–µ email: ${COLORS.RESET}`,
        enterUrl: () => `${COLORS.CYAN}üåê –í–≤–µ–¥–∏—Ç–µ URL: ${COLORS.RESET}`,
        enterPath: () => `${COLORS.CYAN}üìÅ –í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É: ${COLORS.RESET}`,
        enterNumber: (field) => `${COLORS.CYAN}üî¢ –í–≤–µ–¥–∏—Ç–µ ${field}: ${COLORS.RESET}`
    },
    
    choice: {
        selectOption: () => `${COLORS.CYAN}üéØ –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é: ${COLORS.RESET}`,
        yesNo: () => `${COLORS.CYAN}‚ùì –î–∞ –∏–ª–∏ –Ω–µ—Ç? (y/n): ${COLORS.RESET}`,
        continueOperation: () => `${COLORS.CYAN}‚è≠Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é? (y/n): ${COLORS.RESET}`,
        confirmAction: (action) => `${COLORS.YELLOW}‚ö†Ô∏è –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ "${action}" (y/n): ${COLORS.RESET}`,
        selectFromList: () => `${COLORS.CYAN}üìã –í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞: ${COLORS.RESET}`
    },
    
    confirmation: {
        deleteConfirm: (item) => `${COLORS.RED}üóëÔ∏è –£–¥–∞–ª–∏—Ç—å "${item}"? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å! (y/n): ${COLORS.RESET}`,
        overwriteConfirm: (file) => `${COLORS.YELLOW}‚ö†Ô∏è –§–∞–π–ª "${file}" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å? (y/n): ${COLORS.RESET}`,
        proceedDangerous: () => `${COLORS.RED}üíÄ –≠–¢–û –û–ü–ê–°–ù–ê–Ø –û–ü–ï–†–ê–¶–ò–Ø! –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): ${COLORS.RESET}`,
        factoryReset: () => `${COLORS.BRIGHT_RED}üî• –í–ù–ò–ú–ê–ù–ò–ï! –°–±—Ä–æ—Å –∫ –∑–∞–≤–æ–¥—Å–∫–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ! –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): ${COLORS.RESET}`
    },
    
    progress: {
        pleaseWait: () => `${COLORS.CYAN}‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...${COLORS.RESET}`,
        processing: (item) => `${COLORS.CYAN}‚öôÔ∏è –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è: ${item}...${COLORS.RESET}`,
        loading: () => `${COLORS.CYAN}üì• –ó–∞–≥—Ä—É–∑–∫–∞...${COLORS.RESET}`,
        initializing: () => `${COLORS.CYAN}üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...${COLORS.RESET}`,
        almostDone: () => `${COLORS.GREEN}üèÅ –ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ...${COLORS.RESET}`
    },
    
    navigation: {
        pressEnter: () => `${COLORS.DIM}‚èé –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...${COLORS.RESET}`,
        useArrows: () => `${COLORS.DIM}‚¨ÜÔ∏è‚¨áÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä–µ–ª–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏, Enter –¥–ª—è –≤—ã–±–æ—Ä–∞${COLORS.RESET}`,
        typeNumber: () => `${COLORS.DIM}üî¢ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ–ø—Ü–∏–∏ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä–µ–ª–∫–∏${COLORS.RESET}`,
        pressKey: (key) => `${COLORS.DIM}‚å®Ô∏è –ù–∞–∂–º–∏—Ç–µ '${key}' –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è${COLORS.RESET}`,
        exitHint: (key = 'q') => `${COLORS.DIM}üö™ –ù–∞–∂–º–∏—Ç–µ '${key}' –¥–ª—è –≤—ã—Ö–æ–¥–∞${COLORS.RESET}`
    },
    
    help: {
        availableCommands: () => `${COLORS.CYAN}üìö –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${COLORS.RESET}`,
        usage: (command) => `${COLORS.CYAN}üí° –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${command}${COLORS.RESET}`,
        examples: () => `${COLORS.CYAN}üìù –ü—Ä–∏–º–µ—Ä—ã:${COLORS.RESET}`,
        needHelp: () => `${COLORS.CYAN}‚ùì –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å? –í–≤–µ–¥–∏—Ç–µ 'help'${COLORS.RESET}`,
        documentation: () => `${COLORS.CYAN}üìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://github.com/user/clige${COLORS.RESET}`
    },
    
    status: {
        ready: () => `${COLORS.GREEN}üü¢ –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ${COLORS.RESET}`,
        busy: () => `${COLORS.YELLOW}üü° –ó–∞–Ω—è—Ç...${COLORS.RESET}`,
        offline: () => `${COLORS.RED}üî¥ –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω${COLORS.RESET}`,
        connecting: () => `${COLORS.BLUE}üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...${COLORS.RESET}`,
        syncing: () => `${COLORS.CYAN}üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è...${COLORS.RESET}`
    }
};

function getPrompt(category, type, ...args) {
    const promptFunc = prompts[category]?.[type];
    if (typeof promptFunc === 'function') {
        return promptFunc(...args);
    }
    return `${COLORS.CYAN}‚ùì –í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ${COLORS.RESET}`;
}

module.exports = {
    prompts,
    getPrompt
};
