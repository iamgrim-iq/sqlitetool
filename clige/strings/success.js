const { COLORS } = require('../core/colors');

const successMessages = {
    operation: {
        completed: (operation) => `${COLORS.GREEN}‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è "${operation}" —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞${COLORS.RESET}`,
        saved: (item) => `${COLORS.GREEN}üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: ${item}${COLORS.RESET}`,
        deleted: (item) => `${COLORS.GREEN}üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ: ${item}${COLORS.RESET}`,
        created: (item) => `${COLORS.GREEN}‚ú® –°–æ–∑–¥–∞–Ω–æ: ${item}${COLORS.RESET}`,
        updated: (item) => `${COLORS.GREEN}üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${item}${COLORS.RESET}`,
        uploaded: (item) => `${COLORS.GREEN}‚¨ÜÔ∏è –ó–∞–≥—Ä—É–∂–µ–Ω–æ: ${item}${COLORS.RESET}`,
        downloaded: (item) => `${COLORS.GREEN}‚¨áÔ∏è –°–∫–∞—á–∞–Ω–æ: ${item}${COLORS.RESET}`
    },
    
    validation: {
        passed: () => `${COLORS.GREEN}‚úì –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã${COLORS.RESET}`,
        valid: (field) => `${COLORS.GREEN}‚úì –ü–æ–ª–µ "${field}" –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${COLORS.RESET}`,
        verified: () => `${COLORS.GREEN}üîí –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã${COLORS.RESET}`
    },
    
    authentication: {
        loggedIn: (user) => `${COLORS.GREEN}üîì –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${user}!${COLORS.RESET}`,
        loggedOut: () => `${COLORS.GREEN}üëã –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã${COLORS.RESET}`,
        authenticated: () => `${COLORS.GREEN}üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ${COLORS.RESET}`,
        tokenRefreshed: () => `${COLORS.GREEN}üîÑ –¢–æ–∫–µ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω${COLORS.RESET}`
    },
    
    network: {
        connected: (host) => `${COLORS.GREEN}üåê –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ ${host} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ${COLORS.RESET}`,
        requestSent: () => `${COLORS.GREEN}üì§ –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω${COLORS.RESET}`,
        dataReceived: () => `${COLORS.GREEN}üì• –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã${COLORS.RESET}`,
        syncComplete: () => `${COLORS.GREEN}üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞${COLORS.RESET}`
    },
    
    installation: {
        packageInstalled: (pkg) => `${COLORS.GREEN}üì¶ –ü–∞–∫–µ—Ç "${pkg}" —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${COLORS.RESET}`,
        dependenciesResolved: () => `${COLORS.GREEN}üîó –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã${COLORS.RESET}`,
        configurationSaved: () => `${COLORS.GREEN}‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞${COLORS.RESET}`,
        setupComplete: () => `${COLORS.GREEN}üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${COLORS.RESET}`
    },
    
    performance: {
        optimized: () => `${COLORS.GREEN}‚ö° –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞${COLORS.RESET}`,
        cacheCleared: () => `${COLORS.GREEN}üßπ –ö—ç—à –æ—á–∏—â–µ–Ω${COLORS.RESET}`,
        memoryFreed: (amount) => `${COLORS.GREEN}üß† –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ –ø–∞–º—è—Ç–∏: ${amount}${COLORS.RESET}`,
        speedImproved: (percent) => `${COLORS.GREEN}üöÄ –°–∫–æ—Ä–æ—Å—Ç—å —É–≤–µ–ª–∏—á–µ–Ω–∞ –Ω–∞ ${percent}%${COLORS.RESET}`
    },
    
    celebration: {
        awesome: () => `${COLORS.BRIGHT_GREEN}üéâ –ü–û–¢–†–Ø–°–ê–Æ–©–ï!${COLORS.RESET}`,
        perfect: () => `${COLORS.BRIGHT_GREEN}üíé –ò–î–ï–ê–õ–¨–ù–û!${COLORS.RESET}`,
        excellent: () => `${COLORS.BRIGHT_GREEN}‚≠ê –ü–†–ï–í–û–°–•–û–î–ù–û!${COLORS.RESET}`,
        legendary: () => `${COLORS.BRIGHT_GREEN}üèÜ –õ–ï–ì–ï–ù–î–ê–†–ù–û!${COLORS.RESET}`,
        godlike: () => `${COLORS.BRIGHT_GREEN}üëë –ë–û–ñ–ï–°–¢–í–ï–ù–ù–û!${COLORS.RESET}`
    }
};

function formatSuccess(category, type, ...args) {
    const successFunc = successMessages[category]?.[type];
    if (typeof successFunc === 'function') {
        return successFunc(...args);
    }
    return `${COLORS.GREEN}‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ${COLORS.RESET}`;
}

module.exports = {
    successMessages,
    formatSuccess
};
